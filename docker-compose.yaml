version: '3.4'

services: 
  api1: &api
    # image: api
    build: .
    hostname: api1
    depends_on:
      postgres:
        condition: service_healthy
        restart: true

    expose:
      - "8081:8080"
    environment:
      DB_POOL: 35
      DB_URL: "postgres://postgres:12345678@postgres:5432/users"

    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

    volumes:
      - ./:/usr/src/app
    
    command: npm run dev
    
    restart: on-failure

  api2:
    <<: *api
    hostname: api2
    expose:
      - "8082:8080"
  
  postgres:
    image: postgres
    environment:
      POSTGRES_DB: users
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '1.5GB'
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql


  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'
    depends_on:
      - api1
      - api2
      